<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ü¶ñ</title>
    <link>https://konglong87.github.io/</link>
    <description>Recent content on ü¶ñ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Copyright ¬© 2008‚Äì2019, Steve Francia and the lee.so; all rights reserved.</copyright>
    <lastBuildDate>Mon, 20 Mar 2023 18:11:32 +0800</lastBuildDate><atom:link href="https://konglong87.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Creating a New Theme</title>
      <link>https://konglong87.github.io/examplesite/content/post/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://konglong87.github.io/examplesite/content/post/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>https://konglong87.github.io/examplesite/content/post/migrate-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://konglong87.github.io/examplesite/content/post/migrate-from-jekyll/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
‚ñæ &amp;lt;root&amp;gt;/ ‚ñæ images/ logo.png  should become
‚ñæ &amp;lt;root&amp;gt;/ ‚ñæ static/ ‚ñæ images/ logo.png  Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
    <item>
      <title>Â≠ôÂ§ßÂì•ÁªèÂÖ∏ËØ≠ÂΩï</title>
      <link>https://konglong87.github.io/post/s3/</link>
      <pubDate>Mon, 20 Mar 2023 18:11:32 +0800</pubDate>
      
      <guid>https://konglong87.github.io/post/s3/</guid>
      <description>Â≠îÁßòÊï¥ÁêÜ</description>
    </item>
    
    <item>
      <title>ÊÄùÂøµÂ≠ôÂ§ßÂì•</title>
      <link>https://konglong87.github.io/post/%E6%80%9D%E5%BF%B5%E5%AD%99%E5%A4%A7%E5%93%A5/</link>
      <pubDate>Mon, 20 Mar 2023 17:06:39 +0800</pubDate>
      
      <guid>https://konglong87.github.io/post/%E6%80%9D%E5%BF%B5%E5%AD%99%E5%A4%A7%E5%93%A5/</guid>
      <description>ÊÄùÂøµÂ≠ôÂ§ßÂì• ÊÄùÂøµÂ≠ôÂ§ßÂì• ÊÄùÂøµÂ≠ôÂ§ßÂì•</description>
    </item>
    
    <item>
      <title>‰∫≤Áà±ÁöÑÂ≠ôÂ§ßÂì•</title>
      <link>https://konglong87.github.io/post/first/</link>
      <pubDate>Mon, 20 Mar 2023 16:58:20 +0800</pubDate>
      
      <guid>https://konglong87.github.io/post/first/</guid>
      <description>Â≠ôÂ§ßÂì•Â∏¶ÁùÄÊÅêÈæôü¶ñ</description>
    </item>
    
    <item>
      <title>Placeholder Text</title>
      <link>https://konglong87.github.io/post/placeholder-text/</link>
      <pubDate>Wed, 09 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://konglong87.github.io/post/placeholder-text/</guid>
      <description>&lt;p&gt;Lorem est tota propiore conpellat pectoribus de pectora summo.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>https://konglong87.github.io/archives/</link>
      <pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://konglong87.github.io/archives/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Markdown Syntax Guide</title>
      <link>https://konglong87.github.io/post/markdown-syntax/</link>
      <pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://konglong87.github.io/post/markdown-syntax/</guid>
      <description>&lt;p&gt;This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Rich Content</title>
      <link>https://konglong87.github.io/post/rich-content/</link>
      <pubDate>Sun, 10 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://konglong87.github.io/post/rich-content/</guid>
      <description>&lt;p&gt;Hugo ships with several &lt;a href=&#34;https://gohugo.io/content-management/shortcodes/#use-hugos-built-in-shortcodes&#34;&gt;Built-in Shortcodes&lt;/a&gt; for rich content, along with a &lt;a href=&#34;https://gohugo.io/about/hugo-and-gdpr/&#34;&gt;Privacy Config&lt;/a&gt; and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.&lt;/p&gt;
&lt;h2 id=&#34;heading&#34;&gt;&lt;/h2&gt;</description>
    </item>
    
    <item>
      <title>Math Typesetting</title>
      <link>https://konglong87.github.io/post/math-typesetting/</link>
      <pubDate>Fri, 08 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://konglong87.github.io/post/math-typesetting/</guid>
      <description>&lt;p&gt;Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Emoji Support</title>
      <link>https://konglong87.github.io/post/emoji-support/</link>
      <pubDate>Tue, 05 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://konglong87.github.io/post/emoji-support/</guid>
      <description>&lt;p&gt;Emoji can be enabled in a Hugo project in a number of ways.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://konglong87.github.io/about/</link>
      <pubDate>Thu, 28 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://konglong87.github.io/about/</guid>
      <description>Written in Go, Hugo is an open source static site generator available under the Apache Licence 2.0. Hugo supports TOML, YAML and JSON data file types, Markdown and HTML content files and uses shortcodes to add rich content. Other notable features are taxonomies, multilingual mode, image processing, custom output formats, HTML/CSS/JS minification and support for Sass SCSS workflows.
Hugo makes use of a variety of open source projects including:
 https://github.</description>
    </item>
    
    <item>
      <title>Contact</title>
      <link>https://konglong87.github.io/contact/</link>
      <pubDate>Thu, 28 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://konglong87.github.io/contact/</guid>
      <description> github.com/nanxiaobei lee.so  </description>
    </item>
    
    <item>
      <title>About Hugo</title>
      <link>https://konglong87.github.io/examplesite/content/about/</link>
      <pubDate>Wed, 09 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://konglong87.github.io/examplesite/content/about/</guid>
      <description>Hugo is the world‚Äôs fastest framework for building websites. It is written in Go.
It makes use of a variety of open source projects including:
 https://github.com/russross/blackfriday https://github.com/alecthomas/chroma https://github.com/muesli/smartcrop https://github.com/spf13/cobra https://github.com/spf13/viper  Learn more and contribute on GitHub.</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>https://konglong87.github.io/examplesite/content/post/goisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://konglong87.github.io/examplesite/content/post/goisforlovers/</guid>
      <description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates.</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>https://konglong87.github.io/examplesite/content/post/hugoisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://konglong87.github.io/examplesite/content/post/hugoisforlovers/</guid>
      <description>Step 1. Install Hugo Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the Hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
    </item>
    
    <item>
      <title>Â¶Ç‰ΩïÂú®github.ioÊê≠Âª∫HugoÂçöÂÆ¢?</title>
      <link>https://konglong87.github.io/post/read/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://konglong87.github.io/post/read/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
